@using Microsoft.AspNetCore.Identity
@using MicroSocialPlatform.Data
@using Microsoft.EntityFrameworkCore
@model Profile; 
@inject UserManager<AppUser> UserManager;
@inject ApplicationDbContext DbContext;
@{
    ViewData["Title"] = "Show Profile";
    Layout = "MyLayout";

    var my_id = UserManager.GetUserId(User);
    var owns_profile = my_id == Model.UserId;

    Friendship? sent = null;
    Friendship? received = null;
    bool friend = false;

    // If the user does not own the profile, get the friend request sent/received to/from
    // the other user.
    if (!owns_profile)
    {
        sent = DbContext.Friendships.FirstOrDefault(f => f.User1Id == my_id && f.User2Id == Model.UserId);
        received = DbContext.Friendships.FirstOrDefault(f => f.User1Id == Model.UserId && f.User2Id == my_id);
    }

    // Check if the other user is a friend.
    if ((sent != null && sent.Status == FriendshipStatus.Accepted)
        || (received != null && received.Status == FriendshipStatus.Accepted))
    {
        friend = true;
    }

    int num_friends = DbContext.Friendships.Count(f => f.Status == FriendshipStatus.Accepted && (f.User1Id == Model.UserId || f.User2Id == Model.UserId));
    int num_posts = DbContext.Posts.Count(p => p.UserId == Model.UserId);
}
<div class="profile-container" xmlns="http://www.w3.org/1999/html">
    <div class="user-info">

        <img class="user-dp" src="https://cdn.pixabay.com/photo/2015/04/23/21/59/tree-736877__480.jpg" alt="">

        <div class="info-container">
            <h1 class="name">@Model.User.UserName</h1>
            <p class="aboutme">
                About me : @Model.AboutMe
            </p>
            <p class="gender">Gender: @Model.Gender</p>
            <p class="gender">Vizibilitate: @Model.Visibility</p>
        </div>
        <div class="number-card">
            <p class="friends-card">
                @num_friends<span>Friends</span>
            </p>
            <p class="posts-card">
                @num_posts<span>posts</span>
            </p>
        </div>
    </div>
    <div class="btn-container">

        @if (owns_profile)
        {
            <button class="btn edit-btn">
                <a asp-route="edit_profile" asp-route-id="@Model.Id">edit profile </a>
            </button>
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Start")" method="post">
                <button type="submit" class="btn logout-btn">Logout</button>
            </form>
        }
        else
        {
            if (friend)
            {
                // Get the friendship.
                Friendship frienship = (received != null) ? received : sent;
                <form asp-route="delete_friendship" asp-route-id="@frienship.FriendshipId" method="post">
                    <button class="btn">Unfriend</button>
                </form>
            }
            else if (received == null && sent == null)
            {
                // There is no connection.
                <form asp-route="new_friendship" asp-route-id="@Model.UserId" method="post">
                    <button type="submit" class="btn follow-btn">Friend request</button>
                </form>
            }
            else if (received != null)
            {
                // There is a pending request from that user.
                <form asp-route="accept_friendship" asp-route-id="@received.FriendshipId" method="post">
                    <button class="btn">Accept friend request</button>
                </form>

                <form asp-route="delete_friendship" asp-route-id="@received.FriendshipId" method="post">
                    <button class="btn">Deny friend request</button>
                </form>
            }
            else if (sent != null)
            {
                // There is a pending request to that user.
                <form asp-route="delete_friendship" asp-route-id="@sent.FriendshipId" method="post">
                    <button class="btn">Pending friend request</button>
                </form>
            }
        }

    </div>
    <div class="gcontainer">
        <div class="gallery">
            @foreach (var postare in Model.User.UserPosts)
            {
                @Html.Partial("GaleryPostPartial", postare)
            }

        </div>
    </div>
</div>