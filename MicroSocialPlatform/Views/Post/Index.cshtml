@using MicroSocialPlatform.Data
@using Microsoft.AspNetCore.Identity
@model Post 
@inject ApplicationDbContext DbContext;
@inject UserManager<AppUser> UserManager;
@{
    Layout = "MyLayout";
    ViewData["Title"] = "Show Post";
}
<section class="post-with-comments">
    <div class="post-s">
        <div class="post-header">
            <img src="https://cdn.pixabay.com/photo/2015/04/23/21/59/tree-736877__480.jpg" class="user-icon" alt="">
            <form method="get" asp-route="profile" asp-route-id="@Model.User.UserProfile.Id" class="link-to-user">
                <button type="submit" class="user-button">
                    <p class="username">@Model.User.UserName</p>
                </button>
            </form>
            @if (Model.userCanEdit)
            {
                // Show the options button.
                <div class="settings-post-btn">
                    <i class="fa fa-ellipsis-v" aria-hidden="true"></i>
                </div>
            }
        </div>
        <div class="post-feed">
            <div class="post-img-container">
                <div class="text-cont">
                    <p class="post-title">@Model.Title</p>
                    <p class="text">@Model.Content</p>
                </div>
                <img src="https://cdn.pixabay.com/photo/2015/04/23/21/59/tree-736877__480.jpg" alt="">
            </div>
        </div>

        <div class="post-detail">
            <div class="detail-intracables">
                <ion-icon class="lbut" name="heart-outline"></ion-icon>
                <ion-icon class="cbut" name="chatbubble-ellipses"></ion-icon>
            </div>

            <span class="likes">3.4k</span>
            <span class="comment-count">@Model.numComments</span>

        </div>
        <div class="comments-s">
            @foreach (var comment in Model.Comments)
            {
                @Html.Partial("CommentPartial", comment)
            }

            @using (Html.BeginForm("Index", "Post", method: FormMethod.Post, htmlAttributes: new { @class = "comment-box" }))
            {
                <input type="hidden" name="PostId" value="@Model.Id"></input>
                <input name="Content" type="text" id="comment-input"></input>
                @Html.ValidationMessage("Content", null)
                <button class="add-comment-btn" type="submit">Post</button>
            }

        </div>
        @if (Model.userCanEdit)
        {
            <div class="set-divs hid">
                <form method="get" asp-route="edit_post" asp-route-id="@Model.Id" style="display: contents;">
                    <button type="submit" class="edit-post-button">
                        <ion-icon name="create-outline"></ion-icon>
                        <p>Edit</p>
                    </button>
                </form>
                <form method="post" asp-route="delete_post" asp-route-id="@Model.Id" style="display: contents;">
                    <button type="submit" class="delete-post-button">
                        <ion-icon name="trash-outline"></ion-icon>
                        <p>Delete</p>
                    </button>
                </form>
            </div>
        }
    </div>
</section>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<script>
    const delete_buttons = document.querySelector('.set-divs')
    const post_settings_button = document.querySelector('.settings-post-btn');
    
    $(document).ready(function() {
        if (post_settings_button!=null){
            post_settings_button.addEventListener("click",function() {
                if(delete_buttons.classList.contains('hid')){
                    delete_buttons.classList.remove('hid');
                    delete_buttons.classList.add('active');
                }
                else{
                    delete_buttons.classList.remove('active');
                    delete_buttons.classList.add('hid');
                }
                                                                        
            })
      }
         
    });

    const set_buttons = document.querySelectorAll('.set-divs-c')
         const action_divs_c = document.querySelectorAll('.settings-comment-btn')
         $.each(action_divs_c, function(ind, butt) {
         butt.addEventListener("click",function() {
               if(set_buttons[ind].classList.contains('hid')){
                   set_buttons[ind].classList.remove('hid');
                   set_buttons[ind].classList.add('active');
               }
               else{
                   set_buttons[ind].classList.remove('active');
                   set_buttons[ind].classList.add('hid');
               }
             })
       })
 
</script>